br
?toIgraph
?toigraph
?toNetwork
??intergraph
?intergraph
package?intergraph
librayr(network)
d = as.sociomatrix(net8)
d = as.sociomatrix(net)
d2 = graph.edgelist(d, mode = "directed")
d2 = graph.adjacency(d, mode = "directed")
headd2
head(d2)
inet
d2
library(intergraph)
toIgraph(net)
d2 = asIgraph(net)
head(E(d2)$weight)
summary(E(d2)$weight)
hist(E(d2)$weight)
hist(E(d2)$weight > 1)
table(E(d2)$weight > 1)
table(E(d2)$weight > 0.8)
table(E(d2)$weight > 0.7)
table(E(d2)$weight > 0.5)
modularity(inet, weights = E(d2)$weight)
modularity(d2, weights = E(d2)$weight)
modularity(d2, weights = E(d2)$weight, membership = V(d2)$party)
d3 = d2 - is.na(V(d2)$party); modularity(d3, weights = E(d3)$weight, membership = V(d3)$party)
d3 = d2 - which(is.na(V(d2)$party)); modularity(d3, weights = E(d3)$weight, membership = V(d3)$party)
table(E(d3)$weight)
table(E(d3)$weight, exclude=NULL)
d3 = d2 - which(is.na(V(d2)$party)); modularity(d3, weights = E(d3)$weight, membership = factor(V(d3)$party))
d3 = d2 - which(is.na(V(d2)$party)); modularity(d2, weights = E(d2)$weight, membership = factor(V(d2)$party))
modularity(d2, weights = E(d2)$weight, membership = factor(V(d2)$party))
asIgraph(net)
is.directed(asIgraph(net))
head(V(net)$name)
head(V(asIgraph(net))$name)
head(V(asIgraph(net))$names)
head(V(asIgraph(net))$nnom)
head(V(asIgraph(net))$nom)
load('/Users/fr/Documents/Code/R/neta/modularity_an.rda')
str(d)
sapply(d, modularity)
qplot(x = 8:14, y = sapply(d, modularity))
head(edges)
g <- erdos.renyi.game(20, 1/20)#
clusters(g)
g[ cluster(g)$membership == 4 ]
g[ clusters(g)$membership == 4 ]
table(clusters(g)$membership)
rm(list=ls)
rm(list=ls())
load('/Users/fr/Documents/Code/R/neta/data/am_an.rda')
ls(0)
ls()
g <- forest.fire.game(10000, fw.prob=0.37, bw.factor=0.32/0.37)#
dd1 <- degree.distribution(g, mode="in")#
dd2 <- degree.distribution(g, mode="out")#
if (interactive()) {#
  plot(seq(along=dd1)-1, dd1, log="xy")#
  points(seq(along=dd2)-1, dd2, col=2, pch=2)#
}
??split
??summary
.Libraries
.Libraries()
.Librariy()
.Library()
.LibPath
.LibPaths()
LibPaths()
?library
.LibPaths
.Libpaths
.libPaths
?.libPaths
unique(c(new, .Library.site, .Library))
unique(c(new, .Library.site(), .Library))
.Library.site
unique(c(.Library.site, .Library))
.libPaths(unique(c(.Library.site, .Library)))
.Library
.libPaths(new = "hi")
.libPaths()
.libPaths(new = unique(c(.Library.site, .Library)))
libPaths(new = unique(c(.Library.site, .Library)))
? R_LIBS
?R_LIBS
? R_LIBS_USER
library(animation); ?saveGIF
?ani.options
?saveGIF
library(igraph)
??walktrap.community
?walktrap.community
?multilevel.community
load('/Users/fr/Documents/Code/R/neta/data/bi_an8.rda')
library(network)
hist(net %e% "weight")
hist(log(net %e% "weight"))
nrow(edges)
network.edgecount(net)
length(net %e% "source")
hist(net %e% "wpc")
hist(log(net %e% "wpc"))
summary(log(net %e% "wpc"))
hist(sqrt(net %e% "wpc"))
quantile(net %e% "wpc", .75)
net
isolates(net)
load('/Users/fr/Documents/Code/R/neta/data/an13.rda')
sna::isolates(net)
library(sna)
?isolates
hist(net %v% "degree")
hist(net %v% "distance")
plot(net)
update.packages()
library(ergm)
?logLik
load('/Users/fr/Documents/Code/R/neta/models/ergm2/ergm_0.025_0.975_an12.rda')
logLik(ERGM)
summary(ERGM)
?mget
library(XML)
library(rjson)
fromJSON("http://www.europarl.europa.eu/meps/en/1911/see_more.html?type=CRE&leg=7&index=400")
fromJSON(readLines("http://www.europarl.europa.eu/meps/en/1911/see_more.html?type=CRE&leg=7&index=400"))
rjsonlite::fromJSON(readLines("http://www.europarl.europa.eu/meps/en/1911/see_more.html?type=CRE&leg=7&index=400"))
install.packages('rjsonlite')
rjson::fromJSON(readLines("http://www.europarl.europa.eu/meps/en/1911/see_more.html?type=CRE&leg=7&index=400"))
rjson::fromJSON(readLines("http://www.europarl.europa.eu/meps/en/1911/see_more.html?type=CRE&leg=7&index=400", warn = FALSE))
textConnection()
install.packages('rjsonlite', type = 'source')
install_github("jeroen/rjsonlite")
install_github("jeroenooms/rjsonlite")
install_github("jeroenooms/jsonlite")
install.packages('jsonlite')
jsonlite::fromJSON(readLines("http://www.europarl.europa.eu/meps/en/1911/see_more.html?type=CRE&leg=7&index=400", warn = FALSE))
head(jsonlite::fromJSON(readLines("http://www.europarl.europa.eu/meps/en/1911/see_more.html?type=CRE&leg=7&index=400", warn = FALSE)))
?fromJSON
jsonlite::fromJSON
jsonlite?fromJSON
?jsonlite?fromJSON
?jsonlite:fromJSON
?jsonlite::fromJSON
help.search('jsonlite::fromJSON')
sum(c(0, 0, 2, 1, 1, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 2, 1, 0, 1, 0, 1, 2, 0, 1, 1, 0, 2, 1, 2, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 0, 1, 0, 0))
length(c(0, 0, 2, 1, 1, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 2, 1, 0, 1, 0, 1, 2, 0, 1, 1, 0, 2, 1, 2, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 0, 1, 0, 0))
d = read.csv("/Users/fr/Downloads/POLSOC-memos - MEMOS.csv")
d
d = read.csv("/Users/fr/Desktop/Workbook1.csv")
head(d)
with(d, cor(course, part))
with(d, cor(course, part, na.rm = TRUE))
?cor
with(d, cor(course, part, use = "pairwise.complete.obs")
qplot(data = d, x = course, geom = "density") + geom_density(aes(x = part), color = "steelblue")
qplot(data = d, x = course/10, geom = "density") + geom_density(aes(x = part), color = "steelblue")
Sys.time(a <- 1)
Sys.timer(a <- 1)
system.time(a <- 1)
install.packages('topicmodels', type='source')
x = c(1:10, 99)
factor(x)
factor(x, levels = 1:10)
x = c(0:10, 99, NA)
(x <- c(0:10, 99, NA))
(x <- c(0:10, 99, NA, Inf, 1/0))
(x <- c(0:10, 99, NA, Inf, 1/Inf))
(x <- c(0:10, 99, NA, Inf, Inf/Inf))
(x <- c( -1, 0:10, 99, NA, Inf, Inf/Inf ))
factor(x, levels = 0:10)
mean(x, na.rm = TRUE)
mean(factor(x, levels = 0:10))
mean(factor(x, levels = 0:10), na.rm = TRUE)
as.numeric(x)
filter(x, x %in% 0:10
)
dplyr::filter(x, x %in% 0:10)
x [ x %in% 0:10 ]
class(x [ x %in% 0:10 ])
class(x)
(x <- paste(0, 0:10))
(x <- paste0(0, 0:10))
(x <- paste0(0, c( 0:10, 99, NA )))
(x <- paste0(0, c( 0:10, 99 )))
(x <- c(paste0(0, 0:10), 99))
(x <- c(paste0(0, 0:9), 10, 99))
as.numeric(x [ !x %in% "99" ])
as.numeric(replace(x, "99", NA))
class(as.numeric(replace(x, "99", NA)))
mean(as.numeric(replace(x, "99", NA)))
mean(as.numeric(replace(x, "99", NA)), na.rm = TRUE)
?replace
mean(as.numeric(replace(x, NA, "99")), na.rm = TRUE)
replace(x, NA, "99")
x
replace(x, "99", NA)
mean(as.numeric(x [ !x %in% "99" ]))
moy = function(x) mean(as.numeric(as.character(x)), na.rm = TRUE)
moy = function(x) mean(as.numeric(as.character(x))[ !x %in% "99" ], na.rm = TRUE)
moy(x)
(x <- c(paste0(0, 0:9), 10, 99, NA))
moyenne = function(x) mean(as.numeric(as.character(x))[ !x %in% "99" ], na.rm = TRUE)
moyenne = function(x) mean(as.numeric(x)[ !x %in% "99" ], na.rm = TRUE)
moyenne(x)
factor(3:1)
factor(paste0(0, 3:1))
mean(0:10)
mean(x)
mean(as.numeric(x))
mean(as.numeric(x), na.rm = TRUE)
ary(devtools)
library(devtools)
install_github("jrnold/r-checker")
library(topicmodels)
install.packages("topicmodels")
install.packages("topicmodels", type = "source")
setwd('/Users/fr/Documents/Research/Copyright/Papers/2013-AFSP/afsp2013')
dir("data", "\\w.corpus.terms.csv$", full.names = TRUE)
dir("data", ".terms.csv$", full.names = TRUE)
